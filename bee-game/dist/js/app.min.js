var rootRef=new Firebase("https://bee-game.firebaseio.com/"),leaderRef=rootRef.child("leaderboard"),queenRef=rootRef.child("totalqueencount");leaderRef.once("value",function(e){console.log(e.child("one").child("name").val())},function(e){console.log("The read failed: "+e.code)}),queenRef.once("value",function(e){console.log(e.child("total").val())},function(e){console.log("The total queen update failed: "+e.code)});var beeTypes=[{species:"Honey Bee",maxEnergy:25,maxEnergyCapacity:25,pollenCount:0,royalPollenCount:0,honeyCount:10,queenCount:0,royalJellyCount:0,age:0},{species:"Bumble Bee",maxEnergy:25,maxEnergyCapacity:25,pollenCount:0,royalPollenCount:0,honeyCount:10,queenCount:0,royalJellyCount:0,age:0},{species:"Mining Bee",maxEnergy:25,maxEnergyCapacity:25,pollenCount:0,royalPollenCount:0,honeyCount:10,queenCount:0,royalJellyCount:0,age:0},{species:"Leafcutting Bee",maxEnergy:25,maxEnergyCapacity:25,pollenCount:0,royalPollenCount:0,honeyCount:10,queenCount:0,royalJellyCount:0,age:0},{species:"Carpenter Bee",maxEnergy:25,maxEnergyCapacity:25,pollenCount:0,royalPollenCount:0,honeyCount:10,queenCount:0,royalJellyCount:0,age:0}],colonyThreats=[{name:"pesticide",text:"Neonicotinoid Pesticide present",definition:"We run this planet dust. Fight for the pollen but risk energy.",posEffect:"%data% pollen obtained",negEffect:"Overwhelmed, %data% energy has been sapped"},{name:"varroaMite",text:"Varroa Mite attacks!",definition:"External parasitic nightmare. Fight to increase endurance but risk viral infection.",viruses:[{name:"deformedWingVirus",negEffect:"Deformed wing virus has damaged your appendages and reduced energy capacity by %data%",posEffect:"Victory increases max energy by %data%"},{name:"blackQueenCellVirus",negEffect:"Black queen cell virus has killed a queen larva",posEffect:"Victory increases max energy by %data%"},{name:"israeliAcuteParalysisVirus",negEffect:"Israeli acute paralysis virus has depleted your energy by %data%",posEffect:"Victory increases max energy by %data%"}]},{name:"smallHiveBeetle",text:"Small Hive Beetle attacks!",definition:"Vile beetle that infests hive, damaging honeycomb, laying larvae that defecate in honey... discoloring with feces. The bee equivalent of a frat party. Risk honey levels.",negEffect:"Small Hive Beetle has ransacked the hive and %data% honey has been lost",posEffect:"Beetle conquered, honey increased by %data%"},{name:"parasiticPhoridFly",text:"Parasitic Phorid Fly attacks!",definition:'"Zombie Flies" that lay eggs in your abdomen that slowly grow as you go mad. The larvae emerges from your lifeless carcass through your neck. Fight to increase your endurance.',negEffect:"The Parasitic Phorid Fly has successfully implanted egg in your abdomen, max energy will decrease 1 per day. Very Tragic.",posEffect:"Victory increases max energy by %data%"},{name:"climateChange",text:"Humans scoff at clean energy, the subsequent warming kills off some potential future plant life.",definition:"Climate Change"},{name:"rain",text:"Storms a brewin",definition:"Moisture condensed from the atmosphere that falls visibly in separate drops. Risk the water washing all your collected pollen.",negEffect:"An afternoon shower washes away fresh paint, hopscotch, and all your pollen",posEffect:"%data% pollen obtained"},{name:"human",text:"Frenzied child with tennis racket attacks!",definition:"You are lucky they arent trying to set you on fire. Risk it all for glory on the battlefield.",negEffect:"Your jacked bee body is no match for human recreational activities. Your journey ends here.",posEffect:"You sting the child in face, take joy in having inflicted lifelong trauma"},{name:"lostGeneticDiversity",text:"You encounter an industrial bee complex. Mating is not recommended due to lack of genetic variation",definition:"Insect Insest",negEffect:"Queen larva produced eats all your royal jelly and dies.",posEffect:"Way to procreate, queen larva increased by 1"},{name:"malnutrition",text:"You encounter a field of almonds, be careful not to gorge yourself.",definition:"A wide variety of pollen leads to stronger bees. Variety is the spice of life. Risk short term pollen boost.",negEffect:"A monoculture diet has resulted in 50% less pollen collected",posEffect:"%data% pollen obtained"}],caliFlowers=["Calamintha nepetoides","Linaria purpurea","Ceanothus - Ray Hartman","Erigeron karvinskianus","Grindelia stricta","Erigeron glaucus - Wayne Roderick","Lavandula stoechas","Nepeta faasennii","Vitex agnus-castus","Salvia mellifera","Solidago californica","Layia platyglossa","Eriogonum grande rubescens","Eschscholzia californica","Salvia - Indigo Spires","Cosmos sulphureus","Caryoteris incana - Bluebeard","Penstemon heterophyllus","Lavandula intermedia - Provence","Salvia microphylla - Hot Lips","Gilia capitata","Rudbeckia hirta","Bidens ferulifolia","Echium candicans","Helianthus annuus - Sunflower","Cosmos bipinnatus","Salvia uliginosa","Gaillardia grandiflora - Oranges and Lemons","Phacelia tanancetifolia"],chosenBee=beeTypes[Math.floor(Math.random()*beeTypes.length)],climateChangeIndex=22,data="%data%",phoridIndex=0,totalHoney=0,totalJelly=0,leaderOne=0,leaderTwo,leaderThree,leaderFour,leaderFive,leaderOneName,leaderTwoName,leaderThreeName,leaderFourName,leaderFiveName,playerName,beeModel=function(e){this.species=ko.observable(e.species),this.maxEnergy=ko.observable(e.maxEnergy),this.maxEnergyCapacity=ko.observable(e.maxEnergyCapacity),this.pollenCount=ko.observable(e.pollenCount),this.royalPollenCount=ko.observable(e.royalPollenCount),this.honeyCount=ko.observable(e.honeyCount),this.queenCount=ko.observable(e.queenCount),this.royalJellyCount=ko.observable(e.royalJellyCount),this.age=ko.observable(e.age)},controller=function(){var e=this;e.bee=ko.observableArray([]),e.bee.push(new beeModel(chosenBee));var a=Math.floor(13*Math.random()),l=Math.floor(20*Math.random());e.Pos={x:a,y:l},e.Backpack={pollenCollected:0,jellyCollected:0},e.listClick=function(){return e.createHexHive(),!0};var o="%red%",i="%green%",n="%blue%",d=[];e.createHexHive=function(){var r,t,c,s,u,h,p,f,g,m,y,v,b,C=[];for(d=[],$("div").remove(".hexagon"),r=0;r<13;r++){for(C=[],t=0;t<20;t++)h='<div style="background-color:rgb(%red%,%green%,%blue%);"></div>',a==r&&l==t?(h='<div style="background-color:rgb(%red%,%green%,%blue%);"></div>',c=255,s=255,u=255):(p=Math.floor(100*Math.random()).toString(),p>=0&&p<climateChangeIndex?(c=Math.floor(45*Math.random()+175).toString(),s=Math.floor(20*Math.random()+180).toString(),u=Math.floor(45*Math.random()+100).toString(),y=1,v=0,b=caliFlowers[Math.floor(Math.random()*caliFlowers.length)]):p>=23&&p<25?(c=Math.floor(80*Math.random()+150).toString(),s=Math.floor(50*Math.random()).toString(),u=Math.floor(80*Math.random()+150).toString(),y=0,v=1,b=caliFlowers[Math.floor(Math.random()*caliFlowers.length)]):(c=Math.floor(30*Math.random()+50).toString(),s=Math.floor(30*Math.random()+120).toString(),u=Math.floor(30*Math.random()+50).toString(),y=0,v=0,b="")),f={red:c,green:s,blue:u},C.push(f),m=h.replace(o,c),m=m.replace(i,s),m=m.replace(n,u),g=$(m).addClass("hexagon").data("flowerData",{x:r,y:t,p:y,j:v,f:b}),g.on("click",function(){e.updatePos($(this).data("flowerData").x,$(this).data("flowerData").y,$(this).data("flowerData").p,$(this).data("flowerData").j)}),g.on("click",function(){$("#lastflower").replaceWith('<span id="lastflower">'.concat($(this).data("flowerData").f+"</span>"))}),a==r&&l==t?g.on("click",function(){e.createHexHive()}):g.on("click",function(){$(this).addClass("usedFlower"),$("div").removeClass("currentFlower"),$(this).addClass("currentFlower"),$(this).data("flowerData").p=0,$(this).data("flowerData").j=0}),$("#flowerfield").append(g);d.push(C)}var k=e.bee()[0].age();k+=1,k>120&&e.endScreen("age"),e.bee()[0].age(k),e.bee()[0].pollenCount(0),e.bee()[0].royalPollenCount(0),e.Backpack.pollenCollected=0,e.Backpack.jellyCollected=0},e.updatePos=function(o,i,n,d){var r,t,c,s,u,h,p,f,g,m,y,v,b,C,k,w,W,T,E,x,N,F,P,B,M;if(r=e.Pos.y,c=e.Pos.x-(e.Pos.y-(1&e.Pos.y))/2,t=-r-c,s=i,h=o-(i-(1&i))/2,u=-s-h,v=Math.max(Math.abs(s-r),Math.abs(u-t),Math.abs(h-c)),b=e.bee()[0].maxEnergy()-v,e.bee()[0].maxEnergy(b),e.Pos.x=o,e.Pos.y=i,b<0&&e.endScreen("energy"),o==a&&i==l)M=e.bee()[0].maxEnergyCapacity()-phoridIndex,e.bee()[0].maxEnergyCapacity(M),e.bee()[0].maxEnergy(e.bee()[0].maxEnergyCapacity()),g=e.bee()[0].honeyCount(),totalHoney+=e.Backpack.pollenCollected,e.bee()[0].honeyCount(g+e.Backpack.pollenCollected-5),m=e.bee()[0].royalJellyCount(),totalJelly+=e.Backpack.jellyCollected,e.bee()[0].royalJellyCount(m+e.Backpack.jellyCollected),e.bee()[0].royalJellyCount()>=10&&(m=e.bee()[0].royalJellyCount(),e.bee()[0].royalJellyCount(m-10),y=e.bee()[0].queenCount(),e.bee()[0].queenCount(y+1)),e.bee()[0].honeyCount()<0&&e.endScreen("honey");else if(C=v>5?.3:(v+20)/100,k=Math.random(),$("#dialogueWindow").replaceWith("<div id='dialogueWindow'></div>"),C>k){switch($("#flowerfield").hide(),W=colonyThreats[Math.floor(Math.random()*colonyThreats.length)],w=Math.random(),W.name){case"pesticide":F="<div>"+W.text+"</div>",$("#eventPic").replaceWith("<div class='col-md-12' id='eventPic'><img class='img-responsive img-rounded' src='art/pesticide400.png' alt='pesticide'></div>").show();break;case"varroaMite":F="<div>"+W.text+"</div>",$("#eventPic").replaceWith("<div class='col-md-12' id='eventPic'><img class='img-responsive img-rounded' src='art/varroamite400.png' alt='varroa mite'></div>").show();break;case"smallHiveBeetle":F="<div>"+W.text+"</div>",$("#eventPic").replaceWith("<div class='col-md-12' id='eventPic'><img class='img-responsive img-rounded' src='art/beetle400.png' alt='small hive beetle'></div>").show();break;case"parasiticPhoridFly":F="<div>"+W.text+"</div>",$("#eventPic").replaceWith("<div class='col-md-12' id='eventPic'><img class='img-responsive img-rounded' src='art/phorid400.png' alt='parasitic phorid fly'></div>").show();break;case"climateChange":F="<div>"+W.text+"</div>",climateChangeIndex>0&&(climateChangeIndex-=1),f=e.Backpack.jellyCollected,e.Backpack.jellyCollected=f+d,p=e.Backpack.pollenCollected,e.Backpack.pollenCollected=p+n,e.bee()[0].pollenCount(e.Backpack.pollenCollected),e.bee()[0].royalPollenCount(e.Backpack.jellyCollected),$("#flowerfield").show();break;case"rain":F="<div>"+W.text+"</div>",$("#eventPic").replaceWith("<div class='col-md-12' id='eventPic'><img class='img-responsive img-rounded' src='art/rain400.png' alt='rain'></div>").show();break;case"human":F="<div>"+W.text+"</div>",$("#eventPic").replaceWith("<div class='col-md-12' id='eventPic'><img class='img-responsive img-rounded' src='art/human400.png' alt='human'></div>").show();break;case"lostGeneticDiversity":F="<div>"+W.text+"</div>",$("#eventPic").replaceWith("<div class='col-md-12' id='eventPic'><img class='img-responsive img-rounded' src='art/diversity400.png' alt='lost genetic diversity'></div>").show();break;case"malnutrition":F="<div>"+W.text+"</div>",$("#eventPic").replaceWith("<div class='col-md-12' id='eventPic'><img class='img-responsive img-rounded' src='art/malnutrition400.png' alt='malnutrition'></div>").show();break;default:$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>Success is the best revenge</div>")}T="<button type='button' class='btn btn-danger active' id='decision'>Risk</button>",E="<button type='button' class='btn btn-danger active' id='decision'>Run</button>",dialogueText3="<button type='button' class='btn btn-secondary active' id='definition'>Info</button>",P=Math.floor(10*Math.random()+1),x=$(T).on("click",function(){switch($("#flowerfield").show(),W.name){case"pesticide":w>.5?($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.posEffect.replace(data,P)+"</div>"),p=e.Backpack.pollenCollected,e.Backpack.pollenCollected=p+P,e.bee()[0].pollenCount(e.Backpack.pollenCollected)):($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.negEffect.replace(data,P)+"</div>"),b=e.bee()[0].maxEnergy()-P,e.bee()[0].maxEnergy(b));break;case"varroaMite":if(B=Math.floor(3*Math.random()),w>.5)switch(W.viruses[B].name){case"deformedWingVirus":$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.viruses[B].posEffect.replace(data,P)+"</div>"),M=e.bee()[0].maxEnergyCapacity()+P,e.bee()[0].maxEnergyCapacity(M);break;case"blackQueenCellVirus":$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.viruses[B].posEffect.replace(data,P)+"</div>"),M=e.bee()[0].maxEnergyCapacity()+P,e.bee()[0].maxEnergyCapacity(M);break;case"israeliAcuteParalysisVirus":$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.viruses[B].posEffect.replace(data,P)+"</div>"),M=e.bee()[0].maxEnergyCapacity()+P,e.bee()[0].maxEnergyCapacity(M);break;default:$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>Success is the best revenge</div>")}else switch(W.viruses[B].name){case"deformedWingVirus":$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.viruses[B].negEffect.replace(data,P)+"</div>"),M=e.bee()[0].maxEnergyCapacity()-P,e.bee()[0].maxEnergyCapacity(M);break;case"blackQueenCellVirus":y=e.bee()[0].queenCount(),y>0?(e.bee()[0].queenCount(y-1),$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.viruses[B].negEffect.replace(data,P)+"</div>")):$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>There are no queen larva for black queen cell virus to kill</div>");break;case"israeliAcuteParalysisVirus":$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.viruses[B].negEffect.replace(data,P)+"</div>"),b=e.bee()[0].maxEnergy()-P,e.bee()[0].maxEnergy(b);break;default:$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>Success is the best revenge</div>")}break;case"smallHiveBeetle":w>.5?($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.posEffect.replace(data,P)+"</div>"),g=e.bee()[0].honeyCount(),e.bee()[0].honeyCount(g+P)):($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.negEffect.replace(data,P)+"</div>"),g=e.bee()[0].honeyCount(),e.bee()[0].honeyCount(g-P));break;case"parasiticPhoridFly":w>.5?($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.posEffect.replace(data,P)+"</div>"),M=e.bee()[0].maxEnergyCapacity()+P,e.bee()[0].maxEnergyCapacity(M)):($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.negEffect.replace(data,P)+"</div>"),phoridIndex+=1,M=e.bee()[0].maxEnergyCapacity()-phoridIndex,e.bee()[0].maxEnergyCapacity(M));break;case"rain":w>.5?($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.posEffect.replace(data,P)+"</div>"),p=e.Backpack.pollenCollected,e.Backpack.pollenCollected=p+P,e.bee()[0].pollenCount(e.Backpack.pollenCollected)):($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.negEffect.replace(data,P)+"</div>"),e.bee()[0].pollenCount(0));break;case"human":w>.5?$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.posEffect.replace(data,P)+"</div>"):($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.negEffect.replace(data,P)+"</div>"),e.endScreen("human"));break;case"lostGeneticDiversity":w>.5?($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.posEffect.replace(data,P)+"</div>"),y=e.bee()[0].queenCount(),e.bee()[0].queenCount(y+1)):($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.negEffect.replace(data,P)+"</div>"),e.bee()[0].royalJellyCount(0));break;case"malnutrition":w>.5?($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.posEffect.replace(data,P)+"</div>"),p=e.Backpack.pollenCollected,e.Backpack.pollenCollected=p+P,e.bee()[0].pollenCount(e.Backpack.pollenCollected)):($("#dialogueWindow").replaceWith("<div id='dialogueWindow'>"+W.negEffect.replace(data,P)+"</div>"),p=Math.floor(.5*e.Backpack.pollenCollected),e.bee()[0].pollenCount(p));break;default:$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>Success is the best revenge</div>")}w>.5&&(f=e.Backpack.jellyCollected,e.Backpack.jellyCollected=f+d,p=e.Backpack.pollenCollected,e.Backpack.pollenCollected=p+n,e.bee()[0].pollenCount(e.Backpack.pollenCollected),e.bee()[0].royalPollenCount(e.Backpack.jellyCollected)),$("#eventPic").hide()}),N=$(E).on("click",function(){$("#dialogueWindow").replaceWith("<div id='dialogueWindow'>Safe but hungry</div>"),$("#flowerfield").show(),$("#eventPic").hide()}),infoButton=$(dialogueText3).on("click",function(){$("#dialogueWindow").append("<p id='definitionText'>"+W.definition+"</p>"),$("#definition").hide()}),$("#dialogueWindow").append(F),"climateChange"!=W.name&&($("#dialogueWindow").append(x),$("#dialogueWindow").append(N)),$("#dialogueWindow").append(infoButton)}else f=e.Backpack.jellyCollected,e.Backpack.jellyCollected=f+d,p=e.Backpack.pollenCollected,e.Backpack.pollenCollected=p+n,e.bee()[0].pollenCount(e.Backpack.pollenCollected),e.bee()[0].royalPollenCount(e.Backpack.jellyCollected)},e.endScreen=function(a){var l='<h1>GAME OVER</h1><h3>%reasondeath%</h3><ul><li>Days Lasted: %ddata%</li><li>Total Honey Produced: %hdata%</li><li>Total Royal Jelly Produced: %rdata%</li><li id="finalQueenCount">Queens Produced: %qdata%</li></ul><h3>Thanks for playing!<h3>';switch(l=l.replace("%ddata%",e.bee()[0].age()),l=l.replace("%hdata%",totalHoney),l=l.replace("%rdata%",totalJelly),l=l.replace("%qdata%",e.bee()[0].queenCount()),queenRef.once("value",function(a){var l=a.child("total").val();queenRef.update({total:l+e.bee()[0].queenCount()})},function(e){console.log("The total queen update failed: "+e.code)}),a){case"honey":l=l.replace("%reasondeath%","Without honey, you cannot produce energy to continue");break;case"human":l=l.replace("%reasondeath%","Your jacked bee body is no match for human recreational activities. Your journey ends here.");break;case"energy":l=l.replace("%reasondeath%","You have run out of energy. Destined to become one with the flower field.");break;case"age":l=l.replace("%reasondeath%","Congratulations! You have lasted the full arbitrary lifespan of a bee!")}$("#flowerfield").hide(),$(".statRow").hide(),$(".gameData").hide(),$("#eventPicRow").hide(),$(".container").append('<div class="row"><div class="col-md-12" id="end">'+l+"</div></div>");var o="<button type='button' class='btn btn-danger active'>Play Again</button>";o=$(o).on("click",function(){location.reload()}),$("#end").append(o),leaderRef.once("value",function(a){if(leaderOne=a.child("one").child("score").val(),leaderOneName=a.child("one").child("name").val(),leaderTwo=a.child("two").child("score").val(),leaderTwoName=a.child("two").child("name").val(),leaderThree=a.child("three").child("score").val(),leaderThreeName=a.child("three").child("name").val(),leaderFour=a.child("four").child("score").val(),leaderFourName=a.child("four").child("name").val(),leaderFive=a.child("five").child("score").val(),leaderFiveName=a.child("five").child("name").val(),e.bee()[0].queenCount()>leaderFive){playerName=prompt("Congratulations!! Your 'Queens Produced' score is in top 5 of all CCD scores! Please enter your name for the leaderboard"),null!=playerName&&(e.bee()[0].queenCount()<=leaderFour?(leaderRef.child("five").update({name:playerName,score:e.bee()[0].queenCount()},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderFiveName=playerName,leaderFive=e.bee()[0].queenCount()):e.bee()[0].queenCount()<=leaderThree?(leaderRef.child("five").update({name:leaderFourName,score:leaderFour},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("four").update({name:playerName,score:e.bee()[0].queenCount()},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderFiveName=leaderFourName,leaderFive=leaderFour,leaderFourName=playerName,leaderFour=e.bee()[0].queenCount()):e.bee()[0].queenCount()<=leaderTwo?(leaderRef.child("five").update({name:leaderFourName,score:leaderFour},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("four").update({name:leaderThreeName,score:leaderThree},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("three").update({name:playerName,score:e.bee()[0].queenCount()},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderFiveName=leaderFourName,leaderFive=leaderFour,leaderFourName=leaderThreeName,leaderFour=leaderThree,leaderThreeName=playerName,leaderThree=e.bee()[0].queenCount()):e.bee()[0].queenCount()<=leaderOne?(leaderRef.child("five").update({name:leaderFourName,score:leaderFour},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("four").update({name:leaderThreeName,score:leaderThree},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("three").update({name:leaderTwoName,score:leaderTwo},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("two").update({name:playerName,score:e.bee()[0].queenCount()},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderFiveName=leaderFourName,leaderFive=leaderFour,leaderFourName=leaderThreeName,leaderFour=leaderThree,leaderThreeName=leaderTwoName,leaderThree=leaderTwo,leaderTwoName=playerName,leaderTwo=e.bee()[0].queenCount()):(leaderRef.child("five").update({name:leaderFourName,score:leaderFour},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("four").update({name:leaderThreeName,score:leaderThree},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("three").update({name:leaderTwoName,score:leaderTwo},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("two").update({name:leaderOneName,score:leaderOne},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderRef.child("one").update({name:playerName,score:e.bee()[0].queenCount()},function(e){e?console.log("The leaderboard update failed: "+e):console.log("The leaderboard updated successfully")}),leaderFiveName=leaderFourName,leaderFive=leaderFour,leaderFourName=leaderThreeName,leaderFour=leaderThree,leaderThreeName=leaderTwoName,leaderThree=leaderTwo,leaderTwoName=leaderOneName,leaderTwo=leaderOne,leaderOneName=playerName,leaderOne=e.bee()[0].queenCount()));var l="<h1>QUEEN LEADERBOARD</h1><ol><li>"+leaderOneName+" - "+leaderOne+"</li><li>"+leaderTwoName+" - "+leaderTwo+"</li><li>"+leaderThreeName+" - "+leaderThree+"</li><li>"+leaderFourName+" - "+leaderFour+"</li><li>"+leaderFiveName+" - "+leaderFive+"</li></ol>";$("#end").append(l)}else{var l="<h1>QUEEN LEADERBOARD</h1><ol><li>"+leaderOneName+" - "+leaderOne+"</li><li>"+leaderTwoName+" - "+leaderTwo+"</li><li>"+leaderThreeName+" - "+leaderThree+"</li><li>"+leaderFourName+" - "+leaderFour+"</li><li>"+leaderFiveName+" - "+leaderFive+"</li></ol>";$("#end").append(l)}},function(e){console.log("Could not fetch leaderboard: "+e.code)})}};ko.applyBindings(new controller);